defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.7

android-defaults: &android-defaults
  working_directory: ~/repo
  docker:
    - image: karrot/android-build:api-28-node8-alpha

build-android: &build-android
  name: build android
  command: |
    rm -f cordova/www
    mv dist-app-${CORDOVA_ENV} cordova/www
    cd ~/repo/cordova
    rm -f config/current
    ln -s "$CORDOVA_ENV" config/current
    cordova platform add android
    ./build android "$CORDOVA_ENV" release "${!PASSWORD_VAR}"
    mv platforms/android/build/outputs/apk/release/android-release.apk ~/repo/android-${CORDOVA_ENV}.apk

version: 2
jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          environment:
            JEST_JUNIT_OUTPUT: test-reports/junit.xml
          command: |
            mkdir -p test-reports
            yarn add jest-junit
            yarn test \
              --ci \
              --runInBand \
              --testResultsProcessor="./node_modules/jest-junit"
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  e2e-test:
    working_directory: ~/repo
    docker:
      - image: karrot/python:1.6
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: fstool_e2etest
      - image: redis:3.2.11
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          key: python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          key: python-cache-{{ checksum "requirements.txt" }}-
          key: python-cache-
      - run:
          name: prepare backend
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            set -x
            apt-get install wget
            test -d env/bin || virtualenv -p python3 env
            source env/bin/activate
            git clone https://github.com/yunity/karrot-backend
            cd karrot-backend
            pip install --upgrade pip
            pip install --upgrade pip-tools
            pip-sync requirements*.txt
            cp config/local_settings.py.ci config/local_settings.py
            (cd mjml && yarn)
            mjml/convert
      - run:
          name: run backend
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            set -x
            source env/bin/activate
            cd karrot-backend
            python manage.py migrate
            python manage.py runserver
          background: true
      - run:
          name: run frontend
          environment:
            BACKEND: https://localhost:8000
          command: yarn serve
          background: true
      - run:
          name: wait for frontend to get ready
          command: wget --retry-connrefused -T 30 http://localhost:8080
      - run:
          name: wait for backend to get ready
          command: wget --retry-connrefused -T 30 http://localhost:8000/api/groups-info/
      - run:
          name: list all available browsers for your personal benefit
          command: $(yarn bin)/testcafe -b saucelabs
          background: true
      - run:
          name: testcafe
          command: yarn e2e --ci
      - save_cache:
          paths:
            - env
            - ~/.cache/pip
          key: python-cache-{{ checksum "karrot-backend/requirements.txt" }}-{{ checksum "karrot-backend/requirements-dev.txt" }}

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: yarn lint

  build-dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          environment:
            KARROT_THEME: dev
          command: FCM_SENDER_ID="${DEV_FCM_SENDER_ID}" yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist

  build-prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: FCM_SENDER_ID="${PROD_FCM_SENDER_ID}" yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist

  build-storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: yarn build-storybook
      - persist_to_workspace:
          root: ~/repo
          paths:
            - storybook-static

  build-docs:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build docs
          command: |
            set +e
            yarn build-docs
      - persist_to_workspace:
          root: ~/repo
          paths:
            - docs-dist

  build-cordova-dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build cordova app
          command: |
            yarn build:cordova:dev
            mv dist dist-app-dev
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist-app-dev

  build-cordova-prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build cordova app
          command: |
            yarn build:cordova:prod
            mv dist dist-app-prod
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist-app-prod

  build-android-dev:
    <<: *android-defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v0-gradle-{{ .Branch }}
            - v0-gradle
      - run:
          <<: *build-android
          name: build android apk
          environment:
            CORDOVA_ENV: dev
            PASSWORD_VAR: CORDOVA_DEV_PASSWORD
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.android
          key: v0-gradle-{{ .Branch }}-{{ epoch }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - android-dev.apk

  deploy-android-dev:
    <<: *defaults
    steps:
      - run: sudo apt install -y rsync
      - attach_workspace:
          at: .
      - run:
          name: deploy apk
          command: |
            ./deploy-android.sh "${CIRCLE_BRANCH}" android-dev.apk "${CIRCLE_BRANCH}"

  deploy-android-prod:
    <<: *defaults
    steps:
      - run: sudo apt install -y rsync
      - attach_workspace:
          at: .
      - run:
          name: deploy apk
          command: |
            ./deploy-android.sh "${CIRCLE_BRANCH}" android-prod.apk release

  build-android-prod:
    <<: *android-defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v0-gradle-{{ .Branch }}
            - v0-gradle
      - run:
          <<: *build-android
          name: build android apk
          environment:
            CORDOVA_ENV: prod
            PASSWORD_VAR: CORDOVA_PROD_PASSWORD
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.android
          key: v0-gradle-{{ .Branch }}-{{ epoch }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - android-prod.apk

  deploy-dev:
    <<: *defaults
    steps:
      - run: sudo apt install -y rsync
      - checkout
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Dev Deploy
          command: |
            ./deploy.sh "${CIRCLE_BRANCH}" "${CIRCLE_BRANCH}"

  deploy-release:
    <<: *defaults
    steps:
      - run: sudo apt install -y rsync
      - checkout
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Release Deploy
          command: |
            ./deploy.sh "${CIRCLE_BRANCH}" release

workflows:
  version: 2
  all-the-things:
    jobs:
      - install-dependencies
      - test:
          requires:
            - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - build-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - install-dependencies
      - build-storybook:
          filters:
            branches:
              only:
                - master
          requires:
            - install-dependencies
      - build-docs:
          filters:
            branches:
              only:
                - master
          requires:
            - install-dependencies
      - build-cordova-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - install-dependencies
      - build-android-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - build-cordova-dev
      - deploy-android-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - build-android-dev
            - test
      - deploy-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - test
            - lint
            - build-dev
            - build-storybook
            - build-docs
      - approval:
          type: approval
          requires:
            - deploy-dev
      - build-prod:
          requires:
            - approval
      - build-cordova-prod:
          requires:
            - approval
      - build-android-prod:
          requires:
            - build-cordova-prod
      - e2e-test:
          requires:
            - build-prod
      - deploy-android-prod:
          filters:
            branches:
              only:
                - master
          requires:
            - build-android-prod
            - e2e-test
      - deploy-release:
          filters:
            branches:
              only:
                - master
          requires:
            - e2e-test
