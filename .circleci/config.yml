defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: karrot/python:2.0

android-defaults: &android-defaults
  working_directory: ~/repo
  docker:
    - image: karrot/android:api-28-node8-alpha-3

deploy-android: &deploy-android
  <<: *defaults
  steps:
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
          - v2-dependencies-playstorehelper-{{ checksum "cordova/playstoreHelper/requirements.txt" }}
          - v2-dependencies-playstorehelper
    - run:
        name: decode playstore service account credentials
        command: |
          # note: update encrypted playstore credentials with:
          # openssl aes-256-cbc -e -in playstore-service-account.json -out playstore-service-account.json.enc -md md5 -k <secret>
          # we need to specify md5 explicitly, as the default changed in openssl 1.1
          cd ~/repo/cordova/playstoreHelper
          openssl aes-256-cbc -d -in playstore-service-account.json.enc -out playstore-service-account.json -md md5 -k "${PLAYSTORE_SECRET}"
    - run:
        name: deploy apk
        command: |
          ./deploy-android.sh "${CIRCLE_BRANCH}" "${DEPLOY_APK}" "${DEPLOY_DIR}"
    - run:
        name: upload sourcemaps to sentry and associate commits
        environment:
          SENTRY_ORG: foodsaving-worldwide
          SENTRY_PROJECT: karrot
        command: |
          VERSION=`./node_modules/.bin/sentry-cli releases propose-version`
          ./node_modules/.bin/sentry-cli releases new ${VERSION}
          ./node_modules/.bin/sentry-cli releases set-commits --auto ${VERSION}
          ./node_modules/.bin/sentry-cli releases files "${VERSION}" upload-sourcemaps "${DIST_DIR}/assets/js" --rewrite --url-prefix "~/android_asset/www/assets/js"
          ./node_modules/.bin/sentry-cli releases finalize "${VERSION}"
          ./node_modules/.bin/sentry-cli releases set-commits --auto "${VERSION}"

    - save_cache:
        key: v2-dependencies-playstorehelper-{{ checksum "cordova/playstoreHelper/requirements.txt" }}
        paths:
          - ~/repo/cordova/playstoreHelper/env

build-android: &build-android
  name: build android
  command: |
    rm -f cordova/www
    mv dist-app-${CORDOVA_ENV} cordova/www
    cd ~/repo/cordova
    rm -f config/current
    ln -s "$CORDOVA_ENV" config/current
    cordova platform add android
    find www/assets -name *.js.map -type f -delete
    ./build android "$CORDOVA_ENV" release "${!PASSWORD_VAR}"
    mv platforms/android/app/build/outputs/apk/release/app-release.apk ~/repo/android-${CORDOVA_ENV}.apk

version: 2
jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "package.json" }}
          - v2-dependencies-
      - run: yarn --ignore-engines
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          environment:
            JEST_JUNIT_OUTPUT_DIR: test-reports/junit.xml
          command: |
            mkdir -p test-reports
            yarn test \
              --ci \
              --runInBand \
              --reporters=default \
              --reporters=jest-junit
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: yarn lint

  build-dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          environment:
            KARROT_THEME: dev
            FCM_CONFIG: dev
          command: yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist

  build-prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          environment:
            FCM_CONFIG: prod
          command: yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist

  build-storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: yarn build-storybook
      - persist_to_workspace:
          root: ~/repo
          paths:
            - storybook-static

  build-docs:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build docs
          command: |
            set +e
            yarn build-docs
      - persist_to_workspace:
          root: ~/repo
          paths:
            - docs-dist

  build-cordova-dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build cordova app
          command: |
            yarn build:cordova:dev
            mv dist dist-app-dev
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist-app-dev

  build-cordova-prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build cordova app
          command: |
            yarn build:cordova:prod
            mv dist dist-app-prod
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist-app-prod

  build-android-dev:
    <<: *android-defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v0-gradle-{{ .Branch }}
            - v0-gradle
      - run:
          <<: *build-android
          name: build android apk
          environment:
            CORDOVA_ENV: dev
            PASSWORD_VAR: CORDOVA_DEV_PASSWORD
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.android
          key: v0-gradle-{{ .Branch }}-{{ epoch }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - android-dev.apk

  deploy-android-dev:
    <<: *deploy-android
    environment:
      DEPLOY_APK: android-dev.apk
      DEPLOY_DIR: master
      DIST_DIR: dist-app-dev

  deploy-android-prod:
    <<: *deploy-android
    environment:
      DEPLOY_APK: android-prod.apk
      DEPLOY_DIR: release
      DIST_DIR: dist-app-prod

  build-android-prod:
    <<: *android-defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v0-gradle-{{ .Branch }}
            - v0-gradle
      - run:
          <<: *build-android
          name: build android apk
          environment:
            CORDOVA_ENV: prod
            PASSWORD_VAR: CORDOVA_PROD_PASSWORD
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.android
          key: v0-gradle-{{ .Branch }}-{{ epoch }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - android-prod.apk

  deploy-branch:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo
    - deploy:
        name: Branch Deploy
        command: |
          ./deploy.sh branch "${CIRCLE_BRANCH}"

  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Dev Deploy
          command: |
            ./deploy.sh dev "${CIRCLE_BRANCH}"

  deploy-release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Release Deploy
          command: |
            ./deploy.sh release "${CIRCLE_BRANCH}"

  sync-locale-messages:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v2-dependencies-localeshelper-{{ checksum "updateLocalesHelper/requirements.txt" }}
            - v2-dependencies-localeshelper
      - run:
          name: set up environment
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            cd updateLocalesHelper
            test -d env/bin || virtualenv -p python3 env
            env/bin/pip install --upgrade pip
            env/bin/pip install --upgrade pip-tools
            env/bin/pip-sync requirements.txt
      - save_cache:
          paths:
            - env
          key: v2-dependencies-localeshelper-{{ checksum "updateLocalesHelper/requirements.txt" }}
      - run:
          name: install hub
          command: |
            wget https://github.com/github/hub/releases/download/v2.5.1/hub-linux-amd64-2.5.1.tgz
            tar -xf hub-linux-amd64-2.5.1.tgz
            ./hub-linux-amd64-2.5.1/install
            rm hub-linux-amd64-2.5.1.tgz
            rm -r hub-linux-amd64-2.5.1
      - run:
          name: set git remote to include token
          command: git remote set-url origin https://${GITHUB_TOKEN}@github.com/yunity/karrot-frontend.git
      - run:
          name: update locales and make pull request
          # needs TX_TOKEN and GITHUB_TOKEN
          environment:
            BRANCH: circleci-update-locales
          command: |
            set -xe
            git config credential.helper 'cache --timeout=120'
            git config user.email "ci@foodsaving.world"
            git config user.name "CircleCI"
            git branch --delete --force $BRANCH || true
            git checkout -b $BRANCH
            yarn locales:push
            yarn locales:pull
            git add src/locales
            git commit -m "[CI] update locales" || exit 0
            git push --force origin $BRANCH
            hub pull-request -m "[CI] Update locales" || true

workflows:
  version: 2
  all-the-things:
    jobs:
      - install-dependencies
      - test:
          requires:
            - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - build-dev:
          filters:
            branches:
              ignore:
              - circleci-update-locales
              - /dependabot\/.*/
          requires:
            - install-dependencies
      - build-storybook:
          filters:
            branches:
              only:
                - master
          requires:
            - install-dependencies
      - build-docs:
          filters:
            branches:
              only:
                - master
          requires:
            - install-dependencies
      - build-cordova-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - install-dependencies
      - build-android-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - build-cordova-dev
      - deploy-android-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - build-android-dev
            - test
      - deploy-branch:
          filters:
            branches:
              ignore:
              - master
              - circleci-update-locales
              - /dependabot\/.*/
          requires:
            - build-dev
      - deploy-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - test
            - lint
            - build-dev
            - build-storybook
            - build-docs
      - approval:
          type: approval
          requires:
            - deploy-dev
      - build-prod:
          requires:
            - approval
      - build-cordova-prod:
          requires:
            - approval
      - build-android-prod:
          requires:
            - build-cordova-prod
      - deploy-android-prod:
          filters:
            branches:
              only:
                - master
          requires:
            - build-android-prod
            - build-prod
      - deploy-release:
          filters:
            branches:
              only:
                - master
          requires:
            - build-prod

  sync-locales-cronjob:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only: master
    jobs:
      - sync-locale-messages

