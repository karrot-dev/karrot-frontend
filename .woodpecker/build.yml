variables:
  - karrot_env: &karrot_env
    - KARROT_VERSION: "${CI_COMMIT_TAG=latest}"

steps:
  - name: "Build docker image"
    image: woodpeckerci/plugin-docker-buildx:latest
    settings:
      # See docs https://woodpecker-ci.org/plugins/Docker%20Buildx
      platforms: linux/amd64
      repo: codeberg.org/${CI_REPO}
      registry: codeberg.org
      auto_tag: true
      build_args:
        - <<: *karrot_env
      tags: tmp-${CI_COMMIT_SHA:0:8}
      username: ${CI_REPO_OWNER}
      # Sadly with the cache it fails with:
      #   ERROR: failed to solve: content digest
      # See https://ci.codeberg.org/repos/13172/pipeline/22/3
      # cache_images:
      #   - codeberg.org/${CI_REPO}:cache
      # We can choose our buildkit version
      # This was to try resolve the image caching issue
      # buildkit_driveropt:
      #   - "image=moby/buildkit:v0.13.1"
      # buildkit_debug: true
      password:
        # This is a codeberg token that let's us
        # publish packages
        from_secret: cb_token
      logins:
        # This is just a public read only key
        # as we can run into rate limits just
        # pulling the public docker images
        - registry: docker.io
          username: nicksellen
          password:
            from_secret: docker_token

  - name: "Build tar.gz"
    image: "codeberg.org/${CI_REPO}:tmp-${CI_COMMIT_SHA:0:8}"
    environment:
      - <<: *karrot_env
      - PACKAGE_BASE: "https://codeberg.org/api/packages/karrot/generic/karrot-frontend"
      - PACKAGE_FILENAME: "karrot-frontend.tar.gz"
    secrets:
      - cb_token
    commands:
      - tar czvf "$PACKAGE_FILENAME" -C /usr/share/nginx/html .
      - curl -XDELETE --user "nicksellen:$CB_TOKEN" "$PACKAGE_BASE/$KARROT_VERSION/$PACKAGE_FILENAME" || true
      - curl --user "nicksellen:$CB_TOKEN" --upload-file "$PACKAGE_FILENAME" "$PACKAGE_BASE/$KARROT_VERSION/$PACKAGE_FILENAME"

when:
  - event: push
    branch: main
  - event: tag
  - event: manual

# depends_on:
#   # Only build if tests pass
#   - test
